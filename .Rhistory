library(texreghelpr)
?extract_glm
?texreg::extract_glm
library("texreg", lib.loc="~/R/win-library/3.5")
?texreg::extract_glm
library(texreghelpr)
data("epilepsy", package = "HSAUR")
epilepsy
head(epilepsy)
## Fit a GEE model
model <- gee::gee(seizure.rate ~ base + age + treatment,
data = epilepsy,
family = poisson(link = "log"),
id = subject,
corstr = "exchangeable")
summary(model)
texreg::screenreg(extract_gee_glm(model))
texreg::screenreg(texreghelpr::extract_gee_glm(model))
library(texreghelpr)
texreg::screenreg(texreghelpr::extract_gee_glm(model))
model
texreghelpr::extract_gee_glm(model)
texreg::screenreg(texreghelpr::extract_glm_exp(model))
extract_glm_exp
library(texreghelpr)
library(HSAUR)        # package with the dataset
library(gee)          # package to fit the GEE model
library(texreg)       # package to create the table
library(texreghelpr)  # package to exp the model parameters
## Read in the dataset
data("epilepsy", package = "HSAUR")
## Fit a GEE model
model <- gee::gee(seizure.rate ~ base + age + treatment,
data = epilepsy,
family = poisson(link = "log"),
id = subject,
corstr = "exchangeable")
summary(model)
texreg::screenreg(texreghelpr::extract_glm_exp(model))
extract_glm_exp(model)
model
confint(model)
texreg::screenreg(texreghelpr::extract_gee_exp(model))
## Nice table for the model parameters
texreg::screenreg(texreghelpr::extract_gee_exp(model),
ci.test = 1)
texreg::screenreg(texreghelpr::extract_gee_exp(model),
single.row = TRUE
ci.test = 1)
texreg::screenreg(texreghelpr::extract_gee_exp(model),
single.row = TRUE,
ci.test = 1)
library(texreghelpr)
library(HSAUR)        # package with the dataset
library(gee)          # package to fit the GEE model
library(texreg)       # package to create the table
library(texreghelpr)  # package to exp the model parameters
## Read in the dataset
data("epilepsy", package = "HSAUR")
## Fit a GEE model
model <- gee::gee(seizure.rate ~ base + age + treatment,
data = epilepsy,
family = poisson(link = "log"),
id = subject,
corstr = "exchangeable")
## Ugly summary of the model
summary(model)
## Nice table for the model parameters
texreg::screenreg(texreghelpr::extract_gee_exp(model),
single.row = TRUE,
ci.test = 1)
data("plasma", package = "HSAUR")
plasma
head(plasma)
?glm
model <- stats::glm(ESR ~ fibrinogen + globulin,
data = plasma,
family = binormial(link = "logit"))
?family
model <- stats::glm(ESR ~ fibrinogen + globulin,
data = plasma,
family = binomial(link = "logit"))
summary(model)
## Nice table for the model parameters
texreg::screenreg(texreghelpr::extract_glm_exp(model),
single.row = TRUE,
ci.test = 1)
model_1 <- stats::glm(ESR ~ fibrinogen ,
data = plasma,
family = binomial(link = "logit"))
model_2 <- stats::glm(ESR ~ globulin,
data = plasma,
family = binomial(link = "logit"))
model_3 <- stats::glm(ESR ~ fibrinogen + globulin,
data = plasma,
family = binomial(link = "logit"))
## Ugly summary of the model
summary(model_1)
## Nice table for the model parameters
texreg::screenreg(texreghelpr::extract_glm_exp(model_1),
texreghelpr::extract_glm_exp(model_2),
texreghelpr::extract_glm_exp(model_3),
single.row = TRUE,
ci.test = 1)
## Nice table for the model parameters
texreg::screenreg(list(texreghelpr::extract_glm_exp(model_1),
texreghelpr::extract_glm_exp(model_2),
texreghelpr::extract_glm_exp(model_3)),
single.row = TRUE,
ci.test = 1)
## Fit a GLM models
model_1 <- stats::glm(ESR ~ fibrinogen ,
data = plasma,
family = binomial(link = "logit"))
model_2 <- stats::glm(ESR ~ fibrinogen + globulin,
data = plasma,
family = binomial(link = "logit"))
## Ugly summary of the model
summary(model_1)
## Nice table for the model parameters
texreg::screenreg(list(texreghelpr::extract_glm_exp(model_1),
texreghelpr::extract_glm_exp(model_2)),
single.row = TRUE,
ci.test = 1)
library(texreghelpr)
